{"ast":null,"code":"var _jsxFileName = \"E:\\\\Work\\\\Practice react\\\\Final project - Smart Brain\\\\smart-brain-frontend\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './component/FaceRecognition/FaceRecognition';\nimport Navigation from './component/Navigation/Navigation';\nimport SignIn from './component/SignIn/SignIn';\nimport Register from './component/Register/Register';\nimport Logo from './component/Logo/Logo';\nimport ImageLinkForm from './component/ImageLinkForm/ImageLinkForm';\nimport Rank from './component/Rank/Rank';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: 'ca997e549373432480ffe836cdfd8bb4'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        console.log('hi', response);\n\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      box\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: particlesOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: isSignedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 10\n      }, this), \" \", route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 12\n        }, this), \" \", /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: box,\n          imageUrl: imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 12\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this) : route === 'signin' ? /*#__PURE__*/_jsxDEV(SignIn, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 14\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["E:/Work/Practice react/Final project - Smart Brain/smart-brain-frontend/src/App.js"],"names":["React","Component","Particles","Clarifai","FaceRecognition","Navigation","SignIn","Register","Logo","ImageLinkForm","Rank","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","constructor","props","loadUser","data","setState","user","id","name","email","entries","joined","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","onInputChange","event","input","target","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","console","log","fetch","method","headers","body","JSON","stringify","json","count","Object","assign","catch","err","onRouteChange","route","isSignedIn","render"],"mappings":"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","sourcesContent":["import React, {\n  Component\n} from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './component/FaceRecognition/FaceRecognition';\nimport Navigation from './component/Navigation/Navigation';\nimport SignIn from './component/SignIn/SignIn';\nimport Register from './component/Register/Register';\nimport Logo from './component/Logo/Logo';\nimport ImageLinkForm from './component/ImageLinkForm/ImageLinkForm';\nimport Rank from './component/Rank/Rank';\nimport './App.css';\n\nconst app = new Clarifai.App({\n  apiKey: 'ca997e549373432480ffe836cdfd8bb4'\n});\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n    }\n  }\n\n  loadUser = (data) => {\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined\n      }\n    })\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({\n      box: box\n    });\n  }\n\n  onInputChange = (event) => {\n    this.setState({\n      input: event.target.value\n    });\n  }\n\n  onButtonSubmit = () => {\n    this.setState({\n      imageUrl: this.state.input\n    });\n    app.models\n      .predict(\n        Clarifai.FACE_DETECT_MODEL,\n        this.state.input)\n      .then(response => {\n        console.log('hi', response)\n        if (response) {\n          fetch('http://localhost:3000/image', {\n              method: 'put',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                id: this.state.user.id\n              })\n            })\n            .then(response => response.json())\n            .then(count => {\n              this.setState(Object.assign(this.state.user, {\n                entries: count\n              }))\n            });\n\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      .catch(err => console.log(err));\n  };\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState({\n        isSignedIn: false\n      })\n    } else if (route === 'home') {\n      this.setState({\n        isSignedIn: true\n      })\n    }\n    this.setState({\n      route: route\n    });\n  };\n\n  render() {\n    const {\n      isSignedIn,\n      imageUrl,\n      route,\n      box\n    } = this.state;\n    return ( <\n      div className = \"App\" >\n      <\n      Particles className = 'particles'\n      params = {\n        particlesOptions\n      }\n      /> <\n      Navigation isSignedIn = {\n        isSignedIn\n      }\n      onRouteChange = {\n        this.onRouteChange\n      }\n      /> {\n        route === 'home' ?\n          < div >\n          <\n          Logo / >\n          <\n          Rank\n        name = {\n          this.state.user.name\n        }\n        entries = {\n          this.state.user.entries\n        }\n        /> <\n        ImageLinkForm\n        onInputChange = {\n          this.onInputChange\n        }\n        onButtonSubmit = {\n          this.onButtonSubmit\n        }\n        /> <\n        FaceRecognition box = {\n          box\n        }\n        imageUrl = {\n          imageUrl\n        }\n        /> <\n        /div>: (\n          route === 'signin' ?\n          < SignIn loadUser = {\n            this.loadUser\n          }\n          onRouteChange = {\n            this.onRouteChange\n          }\n          /> :\n          < Register loadUser = {\n            this.loadUser\n          }\n          onRouteChange = {\n            this.onRouteChange\n          }\n          />\n        )\n      } <\n      /div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}